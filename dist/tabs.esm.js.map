{"version":3,"file":"tabs.esm.js","sources":["../src/index.tsx"],"sourcesContent":["/**\n * Welcome to @reach/tabs!\n *\n * An accessible tabs component.\n *\n * The `Tab` and `TabPanel` elements are associated by their order in the tree.\n * None of the components are empty wrappers, each is associated with a real DOM\n * element in the document, giving you maximum control over styling and composition.\n *\n * You can render any other elements you want inside of `Tabs`, but `TabList`\n * should only render `Tab` elements, and `TabPanels` should only render\n * `TabPanel` elements.\n *\n * TODO: Consider manual tab activation\n * https://www.w3.org/TR/wai-aria-practices-1.2/examples/tabs/tabs-2/tabs.html\n *\n * @see Docs     https://reacttraining.com/reach-ui/tabs\n * @see Source   https://github.com/reach/reach-ui/tree/master/packages/tabs\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#tabpanel\n */\n\nimport React, {\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  Children,\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"warning\";\nimport {\n  createDescendantContext,\n  DescendantProvider,\n  useDescendant,\n  useDescendantKeyDown,\n  useDescendants,\n} from \"@reach/descendants\";\nimport {\n  boolOrBoolString,\n  checkStyles,\n  cloneValidElement,\n  createNamedContext,\n  forwardRefWithAs,\n  getElementComputedStyle,\n  isNumber,\n  makeId,\n  noop,\n  useForkedRef,\n  useIsomorphicLayoutEffect,\n  useUpdateEffect,\n  wrapEvent,\n} from \"@reach/utils\";\nimport { useId } from \"@reach/auto-id\";\n\ninterface ITabsContext {\n  id: string;\n  isControlled: boolean;\n  orientation?: \"vertical\" | \"horizontal\";\n  listBeforePanels: boolean;\n  onFocusPanel: () => void;\n  onSelectTab: (index: number) => void;\n  selectedIndex: number;\n  selectedPanelRef: React.MutableRefObject<HTMLElement | null>;\n  setSelectedIndex: React.Dispatch<React.SetStateAction<number>>;\n  userInteractedRef: React.MutableRefObject<boolean>;\n}\n\nconst TabsDescendantsContext = createDescendantContext<\n  HTMLElement,\n  TabDescendantProps\n>(\"TabsDescendantsContext\");\n\nconst TabPanelDescendantsContext = createDescendantContext<HTMLElement>(\n  \"TabPanelDescendantsContext\"\n);\nconst TabsContext = createNamedContext(\"TabsContext\", {} as ITabsContext);\nconst useTabsContext = () => useContext(TabsContext);\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Tabs\n *\n * The parent component of the tab interface.\n *\n * @see Docs https://reacttraining.com/reach-ui/tabs#tabs\n */\nexport const Tabs = forwardRefWithAs<TabsProps, \"div\">(function Tabs(\n  {\n    as: Comp = \"div\",\n    children,\n    defaultIndex,\n    orientation = \"horizontal\",\n    index: controlledIndex = undefined,\n    onChange,\n    readOnly = false,\n    ...props\n  },\n  ref\n) {\n  let isControlled = useRef(controlledIndex != null);\n  useEffect(() => {\n    if (__DEV__) {\n      warning(\n        !(isControlled.current && controlledIndex == null),\n        \"Tabs is changing from controlled to uncontrolled. Tabs should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Tabs for the lifetime of the component. Check the `index` prop being passed in.\"\n      );\n      warning(\n        !(!isControlled.current && controlledIndex != null),\n        \"Tabs is changing from uncontrolled to controlled. Tabs should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled Tabs for the lifetime of the component. Check the `index` prop being passed in.\"\n      );\n    }\n  }, [controlledIndex]);\n\n  let _id = useId(props.id);\n  let id = props.id ?? makeId(\"tabs\", _id);\n\n  const childrenArray = React.Children.toArray(children);\n  const indexOfTabPanels = childrenArray.findIndex(\n    child => React.isValidElement(child) && child.type === TabPanels\n  );\n  const indexOfTabList = childrenArray.findIndex(\n    child => React.isValidElement(child) && child.type === TabList\n  );\n  const listBeforePanels =\n    indexOfTabList > -1 &&\n    indexOfTabPanels > -1 &&\n    indexOfTabList < indexOfTabPanels;\n\n  /*\n   * We only manage focus if the user caused the update vs. a new controlled\n   * index coming in.\n   */\n  let userInteractedRef = useRef(false);\n\n  let selectedPanelRef = useRef<HTMLElement | null>(null);\n  let [selectedIndex, setSelectedIndex] = useState(defaultIndex || 0);\n  let [tabs, setTabs] = useDescendants<HTMLElement, TabDescendantProps>();\n\n  const context: ITabsContext = useMemo(() => {\n    return {\n      isControlled: isControlled.current,\n      selectedIndex: isControlled.current\n        ? (controlledIndex as number)\n        : selectedIndex,\n      orientation,\n      listBeforePanels,\n      id,\n      userInteractedRef,\n      selectedPanelRef,\n      setSelectedIndex: isControlled.current ? noop : setSelectedIndex,\n      onFocusPanel: () => {\n        selectedPanelRef.current?.focus();\n      },\n      onSelectTab: readOnly\n        ? noop\n        : (index: number) => {\n            userInteractedRef.current = true;\n            onChange && onChange(index);\n            if (!isControlled.current) {\n              setSelectedIndex(index);\n            }\n          },\n    };\n  }, [\n    controlledIndex,\n    orientation,\n    listBeforePanels,\n    id,\n    onChange,\n    readOnly,\n    selectedIndex,\n  ]);\n\n  useEffect(() => checkStyles(\"tabs\"), []);\n\n  return (\n    <DescendantProvider\n      context={TabsDescendantsContext}\n      items={tabs}\n      set={setTabs}\n    >\n      <TabsContext.Provider value={context}>\n        <Comp\n          {...props}\n          ref={ref}\n          data-reach-tabs=\"\"\n          id={props.id}\n          data-reach-tabs-orientation={orientation}\n        >\n          {children}\n        </Comp>\n      </TabsContext.Provider>\n    </DescendantProvider>\n  );\n});\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/tabs#tabs-props\n */\nexport type TabsProps = {\n  /**\n   * Tabs expects `<TabList>` and `<TabPanels>` as children. The order doesn't\n   * matter, you can have tabs on the top or the bottom. In fact, you could have\n   * tabs on both the bottom and the top at the same time. You can have random\n   * elements inside as well.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/tabs#tabs-props\n   */\n  children: React.ReactNode;\n  /**\n   * Like form inputs, a tab's state can be controlled by the owner. Make sure\n   * to include an `onChange` as well, or else the tabs will not be interactive.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/tabs#tabs-props\n   */\n  index?: number;\n  /**\n   * @see Docs https://reacttraining.com/reach-ui/tabs#tabs-props\n   */\n  readOnly?: boolean;\n  /**\n   * Starts the tabs at a specific index.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/tabs#tabs-props\n   */\n  defaultIndex?: number;\n  /**\n   * Allows you to switch between horizontally-oriented and vertically-oriented\n   * tabs. Defaults to `horizontal`.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/tabs#tabs-props\n   */\n  orientation?: \"vertical\" | \"horizontal\";\n  /**\n   * Calls back with the tab index whenever the user changes tabs, allowing your\n   * app to synchronize with it.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/tabs#tabs-props\n   */\n  onChange?: (index: number) => void;\n};\n\nif (__DEV__) {\n  Tabs.displayName = \"Tabs\";\n  Tabs.propTypes = {\n    children: PropTypes.node.isRequired,\n    onChange: PropTypes.func,\n    index: (props, name, compName, location, propName) => {\n      let val = props[name];\n      if (\n        props.index > -1 &&\n        props.onChange == null &&\n        props.readOnly !== true\n      ) {\n        return new Error(\n          \"You provided a value prop to `\" +\n            compName +\n            \"` without an `onChange` handler. This will render a read-only tabs element. If the tabs should be mutable use `defaultIndex`. Otherwise, set `onChange`.\"\n        );\n      } else if (props[name] != null && !isNumber(props[name])) {\n        return new Error(\n          `Invalid prop \\`${propName}\\` supplied to \\`${compName}\\`. Expected \\`number\\`, received \\`${\n            Array.isArray(val) ? \"array\" : typeof val\n          }\\`.`\n        );\n      }\n      return null;\n    },\n    defaultIndex: PropTypes.number,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * TabList\n *\n * The parent component of the tabs.\n *\n * @see Docs https://reacttraining.com/reach-ui/tabs#tablist\n */\nexport const TabList = forwardRefWithAs<TabListProps, \"div\">(function TabList(\n  { children, as: Comp = \"div\", onKeyDown, ...props },\n  forwardedRef\n) {\n  const {\n    isControlled,\n    onSelectTab,\n    onFocusPanel,\n    setSelectedIndex,\n    selectedIndex,\n    orientation,\n    listBeforePanels,\n  } = useTabsContext();\n\n  let { descendants } = useContext(TabsDescendantsContext);\n  let ownRef = useRef<HTMLElement | null>(null);\n  let ref = useForkedRef(forwardedRef, ownRef);\n  let isRTL = useRef(false);\n\n  useEffect(() => {\n    if (\n      ownRef.current &&\n      ((ownRef.current.ownerDocument &&\n        ownRef.current.ownerDocument.dir === \"rtl\") ||\n        getElementComputedStyle(ownRef.current, \"direction\") === \"rtl\")\n    ) {\n      isRTL.current = true;\n    }\n  }, []);\n\n  let handleKeyDown = wrapEvent(\n    function(event: React.KeyboardEvent) {\n      let keyToMatch;\n\n      if (orientation === \"vertical\") {\n        if (isRTL.current) {\n          keyToMatch = listBeforePanels ? \"ArrowLeft\" : \"ArrowRight\";\n        } else {\n          keyToMatch = listBeforePanels ? \"ArrowRight\" : \"ArrowLeft\";\n        }\n      } else {\n        keyToMatch = listBeforePanels ? \"ArrowDown\" : \"ArrowUp\";\n      }\n\n      if (event.key === keyToMatch) {\n        event.preventDefault();\n        onFocusPanel();\n      }\n    },\n    useDescendantKeyDown(TabsDescendantsContext, {\n      currentIndex: selectedIndex,\n      orientation,\n      rotate: true,\n      callback: onSelectTab,\n      filter: tab => !tab.disabled,\n      rtl: isRTL.current,\n    })\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    /*\n     * In the event an uncontrolled component's selected index is disabled,\n     * (this should only happen if the first tab is disabled and no default\n     * index is set), we need to override the selection to the next selectable\n     * index value.\n     */\n    if (\n      !isControlled &&\n      boolOrBoolString(descendants[selectedIndex]?.disabled)\n    ) {\n      let next = descendants.find(tab => !tab.disabled);\n      if (next) {\n        setSelectedIndex(next.index);\n      }\n    }\n  }, [descendants, isControlled, selectedIndex, setSelectedIndex]);\n\n  return (\n    <Comp\n      // If the `tablist` element is vertically oriented, it has the property\n      // `aria-orientation` set to `\"vertical\"`. The default value of\n      // `aria-orientation` for a tablist element is `\"horizontal\"`.\n      // https://www.w3.org/TR/wai-aria-practices-1.2/#tabpanel\n      // aria-orientation={vertical ? \"vertical\" : undefined}\n\n      // The element that serves as the container for the set of tabs has role\n      // `tablist`\n      // https://www.w3.org/TR/wai-aria-practices-1.2/#tabpanel\n      role=\"tablist\"\n      {...props}\n      data-reach-tab-list=\"\"\n      aria-orientation={orientation}\n      ref={ref}\n      onKeyDown={wrapEvent(onKeyDown, handleKeyDown)}\n    >\n      {Children.map(children, (child, index) => {\n        /*\n         * TODO: Since refactoring to use context rather than depending on\n         * parent/child relationships, we need to update our recommendations for\n         * animations that break when we don't forward the `isSelected` prop\n         * to our tabs. We will remove this in 1.0 and update our docs\n         * accordingly.\n         */\n        return cloneValidElement(child, {\n          isSelected: index === selectedIndex,\n        });\n      })}\n    </Comp>\n  );\n});\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/tabs#tablist-props\n */\nexport type TabListProps = {\n  /**\n   * `TabList` expects multiple `Tab` elements as children.\n   *\n   * `TabPanels` expects multiple `TabPanel` elements as children.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/tabs#tablist-children\n   */\n  children?: React.ReactNode;\n};\n\nif (__DEV__) {\n  TabList.displayName = \"TabList\";\n  TabList.propTypes = {\n    as: PropTypes.any,\n    children: PropTypes.node,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Tab\n *\n * The interactive element that changes the selected panel.\n *\n * @see Docs https://reacttraining.com/reach-ui/tabs#tab\n */\nexport const Tab = forwardRefWithAs<\n  // TODO: Remove this when cloneElement is removed\n  TabProps & { isSelected?: boolean },\n  \"button\"\n>(function Tab(\n  { children, isSelected: _, as: Comp = \"button\", disabled, ...props },\n  forwardedRef\n) {\n  const {\n    id: tabsId,\n    onSelectTab,\n    selectedIndex,\n    userInteractedRef,\n  } = useTabsContext();\n  const ownRef = useRef<HTMLElement | null>(null);\n  const ref = useForkedRef(forwardedRef, ownRef);\n  const index = useDescendant({\n    element: ownRef.current!,\n    context: TabsDescendantsContext,\n    disabled: !!disabled,\n  });\n\n  const isSelected = index === selectedIndex;\n\n  function onSelect() {\n    onSelectTab(index);\n  }\n\n  useUpdateEffect(() => {\n    if (isSelected && ownRef.current && userInteractedRef.current) {\n      userInteractedRef.current = false;\n      ownRef.current.focus();\n    }\n  }, [isSelected]);\n\n  return (\n    <Comp\n      // Each element with role `tab` has the property `aria-controls` referring\n      // to its associated `tabpanel` element.\n      // https://www.w3.org/TR/wai-aria-practices-1.2/#tabpanel\n      aria-controls={makeId(tabsId, \"panel\", index)}\n      aria-disabled={disabled}\n      // The active tab element has the state `aria-selected` set to `true` and\n      // all other tab elements have it set to `false`.\n      // https://www.w3.org/TR/wai-aria-practices-1.2/#tabpanel\n      aria-selected={isSelected}\n      // Each element that serves as a tab has role `tab` and is contained\n      // within the element with role `tablist`.\n      // https://www.w3.org/TR/wai-aria-practices-1.2/#tabpanel\n      role=\"tab\"\n      tabIndex={isSelected ? 0 : -1}\n      {...props}\n      ref={ref}\n      data-reach-tab=\"\"\n      data-selected={isSelected ? \"\" : undefined}\n      disabled={disabled}\n      id={makeId(tabsId, \"tab\", index)}\n      onClick={onSelect}\n    >\n      {children}\n    </Comp>\n  );\n});\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/tabs#tab-props\n */\nexport type TabProps = {\n  disabled?: boolean;\n} & TabPanelProps;\n\nif (__DEV__) {\n  Tab.displayName = \"Tab\";\n  Tab.propTypes = {\n    children: PropTypes.node,\n    disabled: PropTypes.bool,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * TabPanels\n *\n * The parent component of the panels.\n *\n * @see Docs https://reacttraining.com/reach-ui/tabs#tabpanels\n */\nexport const TabPanels = forwardRefWithAs<TabPanelsProps, \"div\">(\n  function TabPanels({ children, as: Comp = \"div\", ...props }, forwardedRef) {\n    let [tabPanels, setTabPanels] = useDescendants<HTMLElement>();\n    return (\n      <DescendantProvider\n        context={TabPanelDescendantsContext}\n        items={tabPanels}\n        set={setTabPanels}\n      >\n        <Comp {...props} ref={forwardedRef} data-reach-tab-panels=\"\">\n          {children}\n        </Comp>\n      </DescendantProvider>\n    );\n  }\n);\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/tabs#tabpanels-props\n */\nexport type TabPanelsProps = TabListProps & {};\n\nif (__DEV__) {\n  TabPanels.displayName = \"TabPanels\";\n  TabPanels.propTypes = {\n    as: PropTypes.any,\n    children: PropTypes.node,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * TabPanel\n *\n * The panel that displays when it's corresponding tab is active.\n *\n * @see Docs https://reacttraining.com/reach-ui/tabs#tabpanel\n */\nexport const TabPanel = forwardRefWithAs<TabPanelProps, \"div\">(\n  function TabPanel(\n    { children, \"aria-label\": ariaLabel, as: Comp = \"div\", ...props },\n    forwardedRef\n  ) {\n    let { selectedPanelRef, selectedIndex, id: tabsId } = useTabsContext();\n    let ownRef = useRef<HTMLElement | null>(null);\n\n    let index = useDescendant({\n      element: ownRef.current!,\n      context: TabPanelDescendantsContext,\n    });\n    let isSelected = index === selectedIndex;\n\n    let id = makeId(tabsId, \"panel\", index);\n\n    let ref = useForkedRef(\n      forwardedRef,\n      ownRef,\n      isSelected ? selectedPanelRef : null\n    );\n\n    return (\n      <Comp\n        // Each element with role `tabpanel` has the property `aria-labelledby`\n        // referring to its associated tab element.\n        aria-labelledby={makeId(tabsId, \"tab\", index)}\n        hidden={!isSelected}\n        // Each element that contains the content panel for a tab has role\n        // `tabpanel`.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#tabpanel\n        role=\"tabpanel\"\n        tabIndex={isSelected ? 0 : -1}\n        {...props}\n        ref={ref}\n        data-reach-tab-panel=\"\"\n        id={id}\n      >\n        {children}\n      </Comp>\n    );\n  }\n);\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/tabs#tabpanel-props\n */\nexport type TabPanelProps = {\n  /**\n   * `TabPanel` can receive any type of children.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/tabs#tabpanel-children\n   */\n  children?: React.ReactNode;\n};\n\nif (__DEV__) {\n  TabPanel.displayName = \"TabPanel\";\n  TabPanel.propTypes = {\n    as: PropTypes.any,\n    children: PropTypes.node,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\ntype TabDescendantProps = {\n  disabled: boolean;\n};\n"],"names":["TabsDescendantsContext","createDescendantContext","TabPanelDescendantsContext","TabsContext","createNamedContext","useTabsContext","useContext","Tabs","forwardRefWithAs","ref","as","Comp","children","defaultIndex","orientation","index","controlledIndex","undefined","onChange","readOnly","props","isControlled","useRef","useEffect","warning","current","_id","useId","id","makeId","childrenArray","React","Children","toArray","indexOfTabPanels","findIndex","child","isValidElement","type","TabPanels","indexOfTabList","TabList","listBeforePanels","userInteractedRef","selectedPanelRef","useState","selectedIndex","setSelectedIndex","useDescendants","tabs","setTabs","context","useMemo","noop","onFocusPanel","focus","onSelectTab","checkStyles","DescendantProvider","items","set","Provider","value","displayName","propTypes","PropTypes","node","isRequired","func","name","compName","location","propName","val","Error","isNumber","Array","isArray","number","forwardedRef","onKeyDown","descendants","ownRef","useForkedRef","isRTL","ownerDocument","dir","getElementComputedStyle","handleKeyDown","wrapEvent","event","keyToMatch","key","preventDefault","useDescendantKeyDown","currentIndex","rotate","callback","filter","tab","disabled","rtl","useIsomorphicLayoutEffect","boolOrBoolString","next","find","role","map","cloneValidElement","isSelected","any","Tab","_","tabsId","useDescendant","element","onSelect","useUpdateEffect","tabIndex","onClick","bool","tabPanels","setTabPanels","TabPanel","ariaLabel","hidden"],"mappings":"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"}